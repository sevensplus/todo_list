{"version":3,"sources":["index.js"],"names":["NewToDo","className","type","placeholder","onKeyPress","this","props","keyEnter","Component","Item","handleTransfrom","index","changeItemType","handleDelete","deleteItem","value","uniqueKey","viewer","visible","key","onClick","Archive","Num","delFunc","adjustFunc","lists","view","listPocket","map","BottomNav","checkAll","showFunc","checkActive","checkComplete","all","present","active","complete","id","ContainBox","a","newThing","document","getElementsByClassName","todos","state","push","keyNum","order","setState","status","splice","show","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.d5a487cb.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// 新增事項輸入框\r\nclass NewToDo extends Component {\r\n  render(){\r\n    return(\r\n      <input className='newTd' type='text' placeholder='add stuff and press enter' onKeyPress={this.props.keyEnter}></input>\r\n    )\r\n  }\r\n}\r\n\r\n// 事件清單\r\nclass Item extends Component {\r\n  handleTransfrom = () => {\r\n    const {index,changeItemType} = this.props\r\n    changeItemType(index)\r\n  }\r\n  handleDelete = () => {\r\n    const {index,deleteItem} = this.props\r\n    deleteItem(index)\r\n  }\r\n  render(){\r\n    const {value, type, uniqueKey, viewer} = this.props\r\n    let visible = type ? 'complete' : 'active'\r\n    if (viewer === 'active'){\r\n      visible = type ? 'complete hidden' : 'active';\r\n    } else if (viewer ===\"complete\") {\r\n      visible = type ? 'complete' : 'active hidden';\r\n    }\r\n    return(\r\n    <li className={visible} key={uniqueKey}>{value}\r\n      <button onClick={this.handleTransfrom} className='changeType'>{type ? 'Done' : 'Active'}</button>\r\n      <button onClick={this.handleDelete} className='delete'>Delete</button>\r\n    </li>\r\n    )\r\n  }\r\n}\r\nclass Archive extends Component {\r\n  render() {\r\n    const {type, Num, delFunc, adjustFunc, lists, view} = this.props\r\n    const listPocket = lists.map((value,index) => {\r\n      return(<Item value={value} index={index} type={type[index]} uniqueKey={Num[index]}\r\n                  changeItemType={adjustFunc} deleteItem={delFunc} viewer={view}/>    \r\n      )\r\n    })\r\n    return(\r\n      <ul>{listPocket}</ul>\r\n    )\r\n  }\r\n}\r\n\r\n// 狀態列\r\nclass BottomNav extends Component {\r\n  checkAll = () => {\r\n    const {showFunc} = this.props\r\n    showFunc('all')\r\n  }\r\n  checkActive = () => {\r\n    const {showFunc} = this.props\r\n    showFunc('active')\r\n  }\r\n  checkComplete = () => {\r\n    const {showFunc} = this.props\r\n    showFunc('complete')\r\n  }\r\n  render() {\r\n    let all = this.props.present === 'all'\r\n    let active = this.props.present === 'active'\r\n    let complete = this.props.present === 'complete'\r\n\r\n    return(\r\n      <span>\r\n        <button id='all' className={all ? 'present' : ''} onClick={this.checkAll}>All</button>\r\n        <button id='active' className={active ? 'present' : ''} onClick={this.checkActive}>Active</button>\r\n        <button id='complete' className={complete ? 'present' : ''}onClick={this.checkComplete}>Complete</button>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\n// 整理起來\r\nclass ContainBox extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      todos: [],\r\n      type: [],\r\n      keyNum: [],\r\n      order:0,\r\n      view:'all'\r\n    }\r\n  }\r\n  // 新增動作\r\n  keyEnter = (a) => {\r\n    if(a.key === 'Enter') {\r\n      const newThing = document.getElementsByClassName('newTd')[0].value;\r\n      document.getElementsByClassName('newTd')[0].value = \"\";\r\n  \r\n      let todos = this.state.todos\r\n      todos.push(newThing)\r\n      let type = this.state.type\r\n      type.push(false)\r\n      let key = this.state.keyNum\r\n      key.push(this.state.order)\r\n\r\n      this.setState((state) => ({\r\n        todos:todos,\r\n        type:type,\r\n        keyNum:key,\r\n        order:state.order + 1,\r\n        view:state.view\r\n      }))\r\n    }\r\n  }\r\n  // 改變狀態\r\n  changeItemType = (a) => {\r\n    let status = this.state.type\r\n    status[a] = !status[a]\r\n    this.setState(state => ({\r\n      todos:state.todos,\r\n      type:status,\r\n      keyNum:state.keyNum,\r\n      order:state.order,\r\n      view:state.view\r\n    }))\r\n  }\r\n  // 刪除動作\r\n  deleteItem = (a) => {\r\n    let todos = this.state.todos;\r\n    todos.splice(a,1);\r\n    let type = this.state.type;\r\n    type.splice(a,1);\r\n    let key = this.state.keyNum;\r\n    key.splice(a,1);\r\n\r\n    this.setState(state => ({\r\n      todos:todos,\r\n      type:type,\r\n      keyNum:key,\r\n      order:state.order,\r\n      view:state.view\r\n    }))\r\n  }\r\n\r\n  // 篩選動作\r\n  show = (a) => {\r\n    if (a ==='active'){\r\n      this.setState(state => ({\r\n        todos:state.todos,\r\n        type:state.type,\r\n        keyNum:state.keyNum,\r\n        order:state.order,\r\n        view:'active'\r\n      }))\r\n    } else if (a ==='complete'){\r\n      this.setState(state => ({\r\n        todos:state.todos,\r\n        type:state.type,\r\n        keyNum:state.keyNum,\r\n        order:state.order,\r\n        view:'complete'\r\n      }))\r\n    } else {\r\n      this.setState(state => ({\r\n        todos:state.todos,\r\n        type:state.type,\r\n        keyNum:state.keyNum,\r\n        order:state.order,\r\n        view:'all'\r\n      }))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='title'>todos</div>\r\n        <NewToDo keyEnter={this.keyEnter}/>\r\n        <Archive lists={this.state.todos} type={this.state.type} \r\n                  Num={this.state.keyNum}  view={this.state.view}\r\n                  delFunc={this.deleteItem} adjustFunc={this.changeItemType}/>\r\n        <BottomNav showFunc={this.show} present={this.state.view}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<ContainBox/>, document.querySelector('main'))"],"sourceRoot":""}